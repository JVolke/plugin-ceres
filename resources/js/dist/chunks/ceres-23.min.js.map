{"version":3,"sources":["webpack:///./resources/js/src/app/components/common/GoogleMaps.vue?0c7f","webpack:///./resources/js/src/app/helper/whenConsented.js","webpack:///./resources/js/src/app/components/common/GoogleMaps.vue?fc6f","webpack:///resources/js/src/app/components/common/GoogleMaps.vue","webpack:///./resources/js/src/app/components/common/GoogleMaps.vue"],"names":["render","_h","this","$createElement","_c","_self","ref","staticClass","class","aspectClass","scriptBlocked","_t","_e","_withStripped","_call","callback","whenConsented","key","onConsent","onDecline","App","config","global","blockCookies","isShopBuilder","window","ConsentManager","hasResponse","isConsented","document","addEventListener","once","component","options","__file"],"mappings":"kGAAA,IAAIA,EAAS,WACX,IACIC,EADMC,KACGC,eACTC,EAFMF,KAEGG,MAAMD,IAAMH,EACzB,OAAOG,EACL,MACA,CACEE,IAAK,sBACLC,YAAa,mCACbC,MARMN,KAQKO,aAEb,CAVQP,KAUHQ,cAAgBN,EAAG,MAAO,CAVvBF,KAU4BS,GAAG,YAAa,GAV5CT,KAUqDU,QAIjEZ,EAAOa,eAAgB,E,iBCfvB,SAASC,EAAMC,GAELA,GAAgC,mBAAbA,GAErBA,I,WCJ0M,ECYlN,CACE,MAAF,CACI,IACJ,CACM,KAAN,QAEI,IACJ,CACM,KAAN,QAEI,KACJ,CACM,KAAN,OACM,QAAN,IAEI,QACJ,CACM,KAAN,OACM,QAAN,WAEI,YACJ,CACM,KAAN,OACM,QAAN,QAIE,KAAF,WAEI,MAAJ,CACM,eAAN,IAIE,SACF,CACI,YADJ,WAGM,IAAN,8CACA,gDAEM,OAAN,KAEA,CACU,IAAV,SACU,IAAV,UAIA,MAGI,YAjBJ,WAmBM,MAAN,2BAIE,QA1DF,WA2DI,IAAJ,OACI,KAAJ,sBAEM,EAAN,eACA,iBAEQ,EAAR,mBAEA,0BAOE,QACF,CACI,aADJ,WAEM,IAAN,OACM,OAAN,2BAEQ,IAAR,mDAEA,eFtFO,SAASC,EAAcC,EAAKC,EAAWC,GAErCC,IAAIC,OAAOC,OAAOC,eAAgBH,IAAII,eAMvCC,OAAOC,eAEHD,OAAOC,eAAeC,cAEtBb,EAAMW,OAAOC,eAAeE,YAAYX,GAAOC,EAAYC,GAI3DU,SAASC,iBAAiB,kBAAkB,WAExCd,EAAcC,EAAKC,EAAWC,KAC/B,CAAEY,MAAM,IAffjB,EAAMI,GEoGJ,CACV,oBACA,WAEY,EAAZ,iBACY,IAAZ,mCAEY,EAAZ,uBACY,EAAZ,qBACY,EAAZ,8FAEY,EAAZ,oCAAc,OAAd,WACY,EAAZ,qCAAc,OAAd,WAEY,SAAZ,uBAEA,WAEY,EAAZ,qBAjCU,EAAV,iBACA,oBAGY,EAAZ,oCAAc,OAAd,WAKY,EAAZ,QA8BI,cAjDJ,WAmDM,GAAN,iBACA,CACQ,IAAR,qDACA,CACU,OAAV,iBACU,KAAV,UACU,UAAV,eAGQ,IAAR,mBACA,CACU,IAAV,EACU,SAAV,uB,QC/IIc,EAAY,YACd,EACAhC,EJKoB,IIHpB,EACA,KACA,KACA,MAuBFgC,EAAUC,QAAQC,OAAS,wDACZ,UAAAF,E","file":"chunks/ceres-23.min.js","sourcesContent":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      ref: \"googleMapsContainer\",\n      staticClass: \"maps-component position-relative\",\n      class: _vm.aspectClass\n    },\n    [_vm.scriptBlocked ? _c(\"div\", [_vm._t(\"default\")], 2) : _vm._e()]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","function _call(callback)\n{\n    if (!!callback && typeof callback === \"function\")\n    {\n        callback();\n    }\n}\n\nexport function whenConsented(key, onConsent, onDecline)\n{\n    if (!App.config.global.blockCookies || App.isShopBuilder)\n    {\n        _call(onConsent);\n        return;\n    }\n\n    if (window.ConsentManager)\n    {\n        if (window.ConsentManager.hasResponse())\n        {\n            _call(window.ConsentManager.isConsented(key) ? onConsent : onDecline);\n        }\n        else\n        {\n            document.addEventListener(\"consent-change\", () =>\n            {\n                whenConsented(key, onConsent, onDecline);\n            }, { once: true });\n        }\n    }\n    else\n    {\n        _call(onConsent);\n    }\n}\n","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GoogleMaps.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GoogleMaps.vue?vue&type=script&lang=js&\"","<template>\r\n    <div :class=\"aspectClass\" class=\"maps-component position-relative\" ref=\"googleMapsContainer\">\r\n        <div v-if=\"scriptBlocked\">\r\n            <slot></slot>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { whenConsented } from \"../../helper/whenConsented\";\r\nimport { isNullOrUndefined } from \"../../helper/utils\";\r\n\r\nexport default {\r\n    props: {\r\n        lat:\r\n        {\r\n            type: Number\r\n        },\r\n        lng:\r\n        {\r\n            type: Number\r\n        },\r\n        zoom:\r\n        {\r\n            type: Number,\r\n            default: 16\r\n        },\r\n        maptype:\r\n        {\r\n            type: String,\r\n            default: \"roadmap\"\r\n        },\r\n        aspectRatio:\r\n        {\r\n            type: String,\r\n            default: \"3-1\"\r\n        }\r\n    },\r\n\r\n    data: function()\r\n    {\r\n        return {\r\n            scriptBlocked: true\r\n        };\r\n    },\r\n\r\n    computed:\r\n        {\r\n            coordinates()\r\n            {\r\n                const isLatValid = !isNaN(this.lat) && this.lat > -90 && this.lat < 90;\r\n                const isLngValid = !isNaN(this.lng) && this.lng > -180 && this.lng < 180;\r\n\r\n                if (isLatValid && isLngValid)\r\n                {\r\n                    return {\r\n                        lat: this.lat,\r\n                        lng: this.lng\r\n                    };\r\n                }\r\n\r\n                return null;\r\n            },\r\n\r\n            aspectClass()\r\n            {\r\n                return \"prop-\" + this.aspectRatio;\r\n            }\r\n        },\r\n\r\n    mounted()\r\n    {\r\n        this.$nextTick(() =>\r\n        {\r\n            this.createScript()\r\n                .then(() =>\r\n                {\r\n                    this.initializeMap();\r\n                })\r\n                .catch(() =>\r\n                {\r\n                    // Do nothing\r\n                });\r\n        });\r\n    },\r\n\r\n    methods:\r\n    {\r\n        createScript()\r\n        {\r\n            return new Promise((resolve, reject) =>\r\n            {\r\n                const script = document.querySelector(\"script#google-maps-api\");\r\n\r\n                if (!isNullOrUndefined(script))\r\n                {\r\n                    // script already injected...\r\n                    this.scriptBlocked = false;\r\n                    if (isNullOrUndefined(google))\r\n                    {\r\n                        // ...but not loaded yet\r\n                        script.addEventListener(\"load\", () => resolve(script), false);\r\n                    }\r\n                    else\r\n                    {\r\n                        // ..and fully loaded\r\n                        resolve(script);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    // script not loaded\r\n                    whenConsented(\r\n                        \"media.googleMaps\",\r\n                        () =>\r\n                        {\r\n                            this.scriptBlocked = false;\r\n                            const script = document.createElement(\"script\");\r\n\r\n                            script.type = \"text/javascript\";\r\n                            script.id = \"google-maps-api\";\r\n                            script.src = `https://maps.googleapis.com/maps/api/js?key=${App.config.global.googleMapsApiKey}`;\r\n\r\n                            script.addEventListener(\"load\", () => resolve(script), false);\r\n                            script.addEventListener(\"error\", () => reject(script), false);\r\n\r\n                            document.body.appendChild(script);\r\n                        },\r\n                        () =>\r\n                        {\r\n                            this.scriptBlocked = true;\r\n                        });\r\n                }\r\n            });\r\n        },\r\n\r\n        initializeMap()\r\n        {\r\n            if (this.coordinates)\r\n            {\r\n                const map = new google.maps.Map(this.$refs.googleMapsContainer,\r\n                    {\r\n                        center: this.coordinates,\r\n                        zoom  : this.zoom,\r\n                        mapTypeId: this.maptype\r\n                    });\r\n\r\n                new google.maps.Marker(\r\n                    {\r\n                        map: map,\r\n                        position: this.coordinates\r\n                    });\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n","import { render, staticRenderFns } from \"./GoogleMaps.vue?vue&type=template&id=5bf88bf2&\"\nimport script from \"./GoogleMaps.vue?vue&type=script&lang=js&\"\nexport * from \"./GoogleMaps.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\Megaport\\\\Documents\\\\Git\\\\plugin-ceres\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('5bf88bf2')) {\n      api.createRecord('5bf88bf2', component.options)\n    } else {\n      api.reload('5bf88bf2', component.options)\n    }\n    module.hot.accept(\"./GoogleMaps.vue?vue&type=template&id=5bf88bf2&\", function () {\n      api.rerender('5bf88bf2', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/src/app/components/common/GoogleMaps.vue\"\nexport default component.exports"],"sourceRoot":""}